Players: +30 PTS
main.cpp (Raven_Game initialisation)
Player.h
Player.cpp
Raven_Game.h 
Raven_Game.cpp (AddPlayer, LoadMap)

New weapon: +10 PTS
Raven_WeaponSystem.cpp (Switch)
Raven_ObjectEnumaration.h (Enum (Message that appear in game console))
Grenade.h
Grenade.cpp
Nade.cpp
Nade.h
Raven_Map.cpp (Switch to load the Grenade in map)
Params.lua/Params.init
Trigger_WeaponGiver (Display Weapon in map)
Raven_Game.cpp

Bot Apprenant: +40 PTS
Utilisation de l'exemple donné par le professeur

Nouveau but: +10 PTS
(Get Grenade):
Raven_goal_Types.h
Raven_goal_Types.cpp
Goal_GetItem.cpp

(Flee because of stress): Dans le think on ajoute un Evaluateur, cet évaluateur donne sur un Goal. Donc think vérifie dans tous les évaluateurs ce qui vaut le plus la peine.
Une fois que l'évaluateur avec la plus grande désirabilité est trouvé, il call le SetGoal de cet évaluateur qui call un fonction de Think qui rammène vers un Goal
FleeCuzOfStress.cpp
FleeCuzOfStress.h
Raven_goal_Types.h
Raven_goal_Types.cpp
Goal_Think.cpp
FleeGoal_Evaluator.cpp
FleeGoal_Evaluator.h

Rocket Launcher Fuzzy Rules: +5 pts
in Weapon/Weapon_RocketLauncher.cpp